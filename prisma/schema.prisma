// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(PATIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  patient   Patient?
  doctor    Doctor?
}

model Patient {
  id            String   @id @default(uuid())
  fullName      String
  age           Int
  gender        String   
  contactNumber String
  userId        String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user         User      @relation(fields: [userId], references: [id])
  appointments Appointment[]
}

model Doctor {
  id          String   @id @default(uuid())
  fullName    String
  speciality  String
  workStart   String   // HH:mm string
  workEnd     String   // HH:mm string  
  slotMinutes Int      @default(30)
  userId      String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user         User      @relation(fields: [userId], references: [id])
  appointments Appointment[]
}

model Appointment {
  id        String   @id @default(uuid())
  startTime DateTime
  endTime   DateTime
  reason    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  doctorId  String
  patientId String
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  patient   Patient  @relation(fields: [patientId], references: [id])

  @@index([doctorId, startTime])
  @@index([patientId, startTime])
}

enum Role {
  ADMIN
  DOCTOR
  PATIENT
}